name: CI/CD
on:
    push:
    pull_request:
        branches: [main]

jobs:
    verify-and-deploy:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Check out the repository
            - uses: actions/checkout@v3

            # Step 2: Install Podman
            - name: Install Podman
              run: |
                  sudo apt-get update
                  sudo apt-get install -y podman

            # Step 3: Log in to Docker Hub
            - name: Login to Docker Hub
              run: |
                  echo "${{ secrets.DOCKERHUB_PASSWORD }}" | podman login docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Step 4: Build Podman image
            - name: Build Podman image
              run: |
                  podman build \
                    --build-arg VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }} \
                    --build-arg VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }} \
                    --build-arg VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }} \
                    --build-arg VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }} \
                    --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }} \
                    --build-arg VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }} \
                    -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/openlearnhub:${{ github.sha }} .
                  podman tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/openlearnhub:${{ github.sha }} docker.io/${{ secrets.DOCKERHUB_USERNAME }}/openlearnhub:latest

            # Step 5: Push Podman image to Docker Hub
            - name: Push Podman image
              run: |
                  podman push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/openlearnhub:${{ github.sha }}
                  podman push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/openlearnhub:latest

            # Step 6: Install Vercel CLI
            - name: Install Vercel CLI
              if: github.ref == 'refs/heads/main'
              run: npm install --global vercel@latest

            # Step 7: Pull Vercel Environment Information
            - name: Pull Vercel Environment Information
              if: github.ref == 'refs/heads/main'
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            # Step 8: Build Project Artifacts
            - name: Build Project Artifacts
              if: github.ref == 'refs/heads/main'
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            # Step 9: Deploy to Vercel
            - name: Deploy to Vercel
              if: github.ref == 'refs/heads/main'
              run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
